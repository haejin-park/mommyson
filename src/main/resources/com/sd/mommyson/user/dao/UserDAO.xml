<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper namespace="com.sd.mommyson.user.dao.UserDAO">
    
    <resultMap type="com.sd.mommyson.manager.dto.PostDTO" id="postResultMap">
    	<id property="postNo" column="POST_NO"/>
    	<result property="boardCode" column="BOARD_CODE"/>
    	<result property="postTitle" column="POST_TITLE"/>
    	<result property="memCode" column="MEM_CODE"/>
    	<result property="postContent" column="POST_CONTENT"/>
    	<result property="postDate" column="POST_DATE"/>
    	<result property="ansStatus" column="ANS_STATUS"/>
    	<result property="queNo" column="QUE_NO"/>
    	<result property="status" column="STATUS"/>
    	<result property="viewCnt" column="VIEW_CNT"/>
    	<result property="ansContent" column="ANS_CONTENT"/>
    </resultMap>
    
    <resultMap type="com.sd.mommyson.member.dto.StoreDTO" id="storeResultMap">
    	<id property="memCode" column="MEM_CODE"/>
    	<result property="storeName" column="STORE_NAME"/>
    	<result property="storeImg" column="STORE_IMG"/>
    	<result property="storeInfo" column="STORE_INFO"/>
    	<result property="grade" column="GRADE"/>
    	<result property="delCost" column="DEL_COST"/>
    	<result property="workTime" column="WORK_TIME"/>
    	<result property="rvCount" column="COUNT"/>
    </resultMap>
    
    <resultMap type="com.sd.mommyson.user.dto.ReviewDTO" id="reviewResultMap">
    	<id property="rvCode" column="RV_CODE"/>
    	<result property="memCode" column="MEM_CODE"/>
    	<result property="orderCode" column="ORDER_CODE"/>
    	<result property="img" column="RV_IMG"/>
    	<result property="content" column="RV_CONTENT"/>
    	<result property="grade" column="RV_GRADE"/>
    	<result property="memId" column="MEM_ID"/>
    	<result property="isDeleted" column="IS_DELETED"/>
    	<collection property="orderList" ofType="java.lang.String" javaType="list">
    		<result column="SD_NAME"/>
    	</collection>
    </resultMap>
    
<resultMap type="com.sd.mommyson.user.dto.CartDTO" id="cartResultMap">
    	<id property="cartCode" column="CART_CODE"/>
    	<result property="memCode" column="MEM_CODE"/>
    	<result property="amount" column="AMOUNT"/>
    	<result property="totalPrice" column="TOTAL_PRICE"/>
    	<result property="storeName" column="STORE_NAME"/> 
    	<result property="storeImg" column="STORE_IMG"/> 
		<result property="sdCode" column="SD_CODE"/>    
		<result property="sdName" column="SD_NAME"/>    
		<result property="price" column="PRICE"/>    
		<result property="sdImg" column="SD_IMG"/>
    </resultMap>
    
    <resultMap type="com.sd.mommyson.user.dto.OrderDTO" id="orderResultMap">
    	<id property="memCode" column="MEM_CODE"/>
    	<result property="totalPrice" column="TOTAL_PRICE"/>
    	<result property="orderCode" column="ORDER_CODE"/>
    	<result property="orderType" column="ORDER_TYPE"/>
    	<result property="takeTime" column="TAKE_TIME"/>
    	<result property="address" column="ADDRESS"/>
    	<result property="phone" column="PHONE"/>
    	<result property="storeName" column="STORE_NAME"/>
    	<result property="code" column="CODE"/>
    	<result property="acceptTime" column="ORDER_ACCEPT_TIME" jdbcType="VARCHAR"/>
    	<result property="cancleTime" column="ORDER_CANCLE_TIME" jdbcType="VARCHAR"/>
    	<result property="completeTime" column="ORDER_COMPLETE_TIME" jdbcType="VARCHAR"/>
    	<result property="requestTime" column="ORDER_RUQEUST_TIME" jdbcType="VARCHAR"/>
    	<association property="orderInfoDTO" resultMap="InfoResultMap"/>
    	<association property="memberDTO" resultMap="memberResultMap"/>
    	<association property="acceptDTO" resultMap="acceptResultMap"/>
    	<association property="storeInfo" resultMap="storeResultMap"/>
    	<collection property="product" ofType="java.lang.String" javaType="list" resultMap="productResultMap">
    		<result column="SD_CODE"/>
    	</collection>
		<collection property="productDTO" resultMap="productResultMap"/>
		<collection property="orderAmount" resultMap="InfoResultMap"/>
    </resultMap> 
    
   	<resultMap type="com.sd.mommyson.user.dto.OrderInfoDTO" id="InfoResultMap">
		<id property="proNo" column="PRO_NO"/>
		<result property="amount" column="AMONT"/>
		<result property="orderCode" column="ORDER_CODE"/>
		<result property="sdCode" column="SD_CODE"/>
		<result property="address" column="ADDRESS"/>
		<result property="storeName" column="STORE_NAME"/>
	</resultMap>
	
    <resultMap type="com.sd.mommyson.member.dto.MemberDTO" id="memberResultMap">
		<id property="memCode" column="MEM_CODE"/>
		<result property="email" column="EMAIL"/>
		<result property="memPwd" column="MEM_PWD"/>
		<result property="address" column="ADDRESS"/>
		<result property="postCode" column="POST_CODE"/>
		<result property="dAddress" column="D_ADDRESS"/>
		<result property="phone" column="PHONE"/>
		<result property="memType" column="MEM_TYPE"/>
		<result property="locationCode" column="LOCATION_CODE"/>
		<result property="nickname" column="NICKNAME"/>
		<result property="memId" column="MEM_ID"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="isDeleted" column="IS_DELETED"/>
		<association property="user" resultMap="userResultMap"/>
		<association property="ceo" resultMap="ceoResultMap"/>
		<association property="manager" resultMap="managerResultMap"/>
	</resultMap>
	
    <resultMap type="com.sd.mommyson.user.dto.AcceptDTO" id="acceptResultMap">
		<id property="code" column="CODE"/>
		<result property="orderStatus" column="ORDER_STATUS"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.member.dto.UserDTO" id="userResultMap">
		<id property="memCode" column="MEM_CODE"/>
		<result property="name" column="NAME"/>
		<result property="repCount" column="REP_COUNT"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.member.dto.CeoDTO" id="ceoResultMap">
		<id property="memCode" column="MEM_CODE"/>
		<result property="account" column="ACCOUNT"/>
		<result property="no" column="STORE_NO"/>
		<result property="name" column="CEO_NAME"/>
		<association property="store" resultMap="storeResultMap"/>
	</resultMap>
	
	<resultMap type="com.sd.mommyson.member.dto.ManagerDTO" id="managerResultMap">
		<id property="memCode" column="MEM_CODE"/>
		<result property="lastLogin" column="LAST_LOGIN"/>
		<association property="authDTO" resultMap="authResultMap"/>
	</resultMap>
	
	
	<resultMap type="com.sd.mommyson.member.dto.MemberDTO" id="memberResultMap2">
       <id property="memCode" column="MEM_CODE"/>
       <result property="address" column="ADDRESS"/>
       <result property="postCode" column="POST_CODE"/>
       <result property="dAddress" column="D_ADDRESS"/>
    </resultMap>

	
    <resultMap type="com.sd.mommyson.owner.dto.ProductDTO" id="productResultMap">
    	<id property="sdCode" column="SD_CODE"/>
    	<result property="sdName" column="SD_NAME"/>
    	<result property="mDate" column="M_DATE"/>
    	<result property="price" column="PRICE"/>
    	<result property="ingredient" column="INGREDIENT"/>
    	<result property="volume" column="VOLUME"/>
    	<result property="sdImg" column="SD_IMG"/>
    	<result property="category" column="CATEGORY"/>
    	<result property="discountRate" column="DISCOUNT_RATE"/>
    	<result property="memCode" column="MEM_CODE"/>
    	<result property="orderableStatus" column="ORDERABLE_STATUS"/>
    	<result property="eDate" column="EXPIRY_DATE"/>
    	<result property="categoryCode" column="CATEGORY_CODE"/>
    	<result property="storageMethod" column="STORAGE_METHOD"/>
    	<result property="detail" column="SD_DETAIL"/>
    	<result property="isDeleted" column="IS_DELETED"/>
    	<result property="storeName" column="STORE_NAME"/>
    </resultMap>
    
    <resultMap type="com.sd.mommyson.owner.dto.ProductDTO" id="productTagResultMap">
    	<id property="sdCode" column="SD_CODE"/>
    	<result property="sdName" column="SD_NAME"/>
    	<result property="mDate" column="M_DATE"/>
    	<result property="price" column="PRICE"/>
    	<result property="ingredient" column="INGREDIENT"/>
    	<result property="volume" column="VOLUME"/>
    	<result property="sdImg" column="SD_IMG"/>
    	<result property="category" column="CATEGORY"/>
    	<result property="discountRate" column="DISCOUNT_RATE"/>
    	<result property="memCode" column="MEM_CODE"/>
    	<result property="orderableStatus" column="ORDERABLE_STATUS"/>
    	<result property="eDate" column="EXPIRY_DATE"/>
    	<result property="categoryCode" column="CATEGORY_CODE"/>
    	<result property="storageMethod" column="STORAGE_METHOD"/>
    	<result property="detail" column="SD_DETAIL"/>
    	<result property="isDeleted" column="IS_DELETED"/>
    	<result property="storeName" column="STORE_NAME"/>
    	<collection property="tagList" ofType="java.lang.String" javaType="list">
    		<result column="TAG"/>
    	</collection>
    </resultMap>
    
    <resultMap type="com.sd.mommyson.user.dto.FileDTO" id="fileResultMap">
    	<id property="fileCode" column="FILE_CODE"/>
    	<result property="fileName" column="FILE_NAME"/>
    	<result property="postNo" column="POST_NO"/>
    	<result property="fileType" column="FILE_TYPE"/>
    </resultMap>

    <resultMap type="com.sd.mommyson.owner.dto.CouponDTO" id="couponResultMap">
		<id property="cpCode" column="CP_CODE"/>
		<result property="cpNum" column="CP_NUM"/>
		<result property="cpName" column="CP_NAME"/>
		<result property="startDate" column="START_DATE"/>
		<result property="disWon" column="DISCOUNT_WON"/>
		<result property="endDate" column="END_DATE"/>
		<result property="dCcon" column="DC_CONDITION"/>
		<result property="storeCode" column="STORE_CODE"/>
	</resultMap>
	
    <!-- 공지사항 출력 및 검색 -->
    <select id="selectNotice" resultMap="postResultMap">
    	SELECT
    	       A.RNUM	
    	     , A.POST_NO
			 , A.BOARD_CODE
			 , A.POST_TITLE
			 , A.MEM_CODE
			 , A.POST_CONTENT
			 , A.POST_DATE
			 , A.ANS_STATUS
			 , A.QUE_NO
			 , A.STATUS
			 , A.VIEW_CNT				
		FROM (SELECT ROWNUM RNUM	
				 , B.POST_NO
				 , B.BOARD_CODE
				 , B.POST_TITLE
				 , B.MEM_CODE
				 , B.POST_CONTENT
				 , B.POST_DATE
				 , B.ANS_STATUS
				 , B.QUE_NO
				 , B.STATUS
				 , B.VIEW_CNT	
			  FROM (SELECT C.POST_NO
						 , C.BOARD_CODE
						 , C.POST_TITLE
						 , C.MEM_CODE
						 , C.POST_CONTENT
						 , C.POST_DATE
						 , C.ANS_STATUS
						 , C.QUE_NO
						 , C.STATUS	
						 , C.VIEW_CNT
					  FROM POST_TBL C 
					  JOIN BOARD_TBL D ON (C.BOARD_CODE = D.BOARD_CODE)
						  <where>
							    C.STATUS = 'N'
							  <if test="searchCondition =='total' or searchCondition == null " >
							    AND D.TYPE = 'notice'
							  </if>	
							  <if test="searchCondition =='notice'">
							    AND D.TYPE = 'notice'
							  	AND D.D_TYPE = 'notice'
							  </if>
							  <if test="searchCondition =='guide'">
							    AND D.TYPE = 'notice'
							  	AND D.D_TYPE = 'guide'
							  </if>
							  <if test="searchCondition =='check'">
							    AND D.TYPE = 'notice'
							  	AND D.D_TYPE = 'check'
							  </if>
							  <if test="searchCondition =='event'">
							    AND D.TYPE = 'notice'
							  	AND D.D_TYPE = 'event'
							  </if>
							  <if test="searchCondition =='owner'">
							    AND D.TYPE = 'notice'
							  	AND D.D_TYPE = 'owner'
							  </if>
							  <if test="searchValue != null and searchValue !=''">
							   AND C.POST_TITLE LIKE '%' || #{ searchValue } || '%'
							  </if>
						  </where>
						  ORDER BY C.POST_NO DESC
						  ) B
					  <![CDATA[
					  WHERE ROWNUM <= #{ endRow }
					  ]]>
					  ) A
					JOIN BOARD_TBL D ON (A.BOARD_CODE = D.BOARD_CODE)  
		 	   WHERE A.RNUM >= #{ startRow }	
    
    </select>
    
    <!--고객센터 메인 공지사항 -->
    <select id="selectRecentNotice" resultMap="postResultMap">
	    SELECT
				   A.POST_NO
				 , A.BOARD_CODE
				 , A.POST_TITLE
				 , A.MEM_CODE
				 , A.POST_CONTENT
				 , A.POST_DATE
				 , A.ANS_STATUS
				 , A.QUE_NO
				 , A.STATUS
				 , A.VIEW_CNT
			 FROM POST_TBL A
			 JOIN BOARD_TBL B ON(B.BOARD_CODE = A.BOARD_CODE)
			WHERE B.TYPE = 'notice'	 
			 ORDER BY A.POST_NO DESC	
    </select>
    <!-- 고객센터 메인 자주묻는 질문 FQA -->
    <select id="selectOftenFqa" resultMap="postResultMap">
    	SELECT
    	       A.POST_NO
			 , A.BOARD_CODE
			 , A.POST_TITLE
			 , A.MEM_CODE
			 , A.POST_CONTENT
			 , A.POST_DATE
			 , A.ANS_STATUS
			 , A.QUE_NO
			 , A.STATUS
			 , A.VIEW_CNT	
		 FROM POST_TBL A
		 JOIN BOARD_TBL B ON(B.BOARD_CODE = A.BOARD_CODE)
		WHERE B.TYPE = 'fqa'
		ORDER BY A.VIEW_CNT DESC
    </select>
    
        <!-- fqa viewCount -->
    <update id="updateVcountFqa" parameterType="_int">
    UPDATE 
               POST_TBL A
           SET A.VIEW_CNT = (SELECT B.VIEW_CNT
                                  FROM POST_TBL B
                                 WHERE B.POST_NO = #{ postNo }
                               ) + 1
         WHERE A.POST_NO = #{ postNo }	   
    	   
    </update>
    
    

    <!-- 공지사항  페이지수  -->
    <select id="selectTotalCount" resultType="_int" parameterType="hashmap">
        SELECT
               COUNT(*)
          FROM POST_TBL A
	      JOIN BOARD_TBL B ON(A.BOARD_CODE = B.BOARD_CODE)
    	<where>
			A.STATUS = 'N'
			AND B.TYPE ='notice'
    		<if test="searchCondition != null and searchCondition != '' and searchCondition != 'total' ">
				AND B.D_TYPE = #{ searchCondition }
    		</if>
			<if test="searchValue != null">
	        	AND A.POST_TITLE LIKE '%' || #{ searchValue } || '%' 	
			</if>
    	</where>
	</select>
	
	<!-- FQA 페이지 네이션수 -->
	 <!-- 공지사항  페이지수  -->
    <select id="selectFqaTotalCount" resultType="_int" parameterType="hashmap">
        SELECT
               COUNT(*)
          FROM POST_TBL A
	      JOIN BOARD_TBL B ON(A.BOARD_CODE = B.BOARD_CODE)
    	<where>
			A.STATUS = 'N'
			AND B.TYPE ='fqa'
    		<if test="searchCondition != null and searchCondition != '' and searchCondition != 'total' ">
				AND B.D_TYPE = #{ searchCondition }
    		</if>
			<if test="searchValue != null">
	        	AND A.POST_TITLE LIKE '%' || #{ searchValue } || '%' 	
			</if>
    	</where>
	</select>
	
	<select id="selectStoreTotalCount" parameterType="hashmap" resultType="_int">
		SELECT
			   COUNT(*)
		  FROM CEO_TBL A
		  LEFT JOIN MEMBER_TBL B ON(A.MEM_CODE = B.MEM_CODE)
		  LEFT JOIN STORE_TBL C ON(A.MEM_CODE = C.MEM_CODE)
		 WHERE B.IS_DELETED = 'N'
		 <if test="type == 'new'">
		   AND B.ENROLL_DATE > (SYSDATE - 100)
		 </if>
		 <if test="type == 'famous'">
		   AND (SELECT COUNT(*) FROM REVIEW_TBL R JOIN ORDER_TBL O ON(R.ORDER_CODE = O.ORDER_CODE) WHERE O.STORE_CODE = A.MEM_CODE) > 10 
		 </if>
		 <if test="searchValue != null">
		   AND C.STORE_NAME LIKE '%' || #{ searchValue } || '%'
		 </if>
	</select>
	<!-- 공지사항 내용 출력  -->
	<select id="selectNoticeContents" resultMap="postResultMap">
		SELECT
			   A.POST_NO
			 , A.BOARD_CODE
			 , A.POST_TITLE
			 , A.MEM_CODE
			 , A.POST_CONTENT
			 , A.POST_DATE
			 , A.ANS_STATUS
			 , A.QUE_NO
			 , A.STATUS
			 , A.VIEW_CNT
		 FROM POST_TBL A	 
		WHERE A.POST_NO = #{ postNo }			 
	</select>
	
	<!--공지사항 및 자주묻는 질문 조회수  증가 -->
	<update id="updateIncrementBoardCount" parameterType="_int">
        UPDATE 
               POST_TBL A
           SET A.VIEW_CNT = (SELECT B.VIEW_CNT
                                  FROM POST_TBL B
                                 WHERE B.POST_NO = #{ postNo }
                               ) + 1
         WHERE A.POST_NO = #{ postNo }
	</update>
	
	<!-- 중요공지사항 출력 -->
	<select id="selectImportantNotice" resultMap="postResultMap">
	SELECT 
		   A.POST_NO
		 , A.BOARD_CODE
		 , A.POST_TITLE
		 , A.MEM_CODE
		 , A.POST_CONTENT
		 , A.POST_DATE
		 , A.ANS_STATUS
		 , A.QUE_NO
		 , A.STATUS
		 , A.VIEW_CNT
	  FROM POST_TBL A
	  JOIN BOARD_TBL B ON(B.BOARD_CODE = A.BOARD_CODE)
	 WHERE A.STATUS LIKE 'U'
	   AND B.TYPE ='notice' 
	</select>
	
	<!-- 자주하는 질문 -->
	<select id="selectFqaList" resultMap="postResultMap">
    	SELECT
    	       A.RNUM	
    	     , A.POST_NO
			 , A.BOARD_CODE
			 , A.POST_TITLE
			 , A.MEM_CODE
			 , A.POST_CONTENT
			 , A.POST_DATE
			 , A.ANS_STATUS
			 , A.QUE_NO
			 , A.STATUS				
		FROM (SELECT ROWNUM RNUM	
				 , B.POST_NO
				 , B.BOARD_CODE
				 , B.POST_TITLE
				 , B.MEM_CODE
				 , B.POST_CONTENT
				 , B.POST_DATE
				 , B.ANS_STATUS
				 , B.QUE_NO
				 , B.STATUS	
			  FROM (SELECT C.POST_NO
						 , C.BOARD_CODE
						 , C.POST_TITLE
						 , C.MEM_CODE
						 , C.POST_CONTENT
						 , C.POST_DATE
						 , C.ANS_STATUS
						 , C.QUE_NO
						 , C.STATUS	
					  FROM POST_TBL C 
					  JOIN BOARD_TBL D ON (C.BOARD_CODE = D.BOARD_CODE)
						  <where>
						  	D.TYPE = 'fqa'
							AND C.STATUS = 'N' 
							  <if test="searchCondition =='memberJoinQuestion'">
							  	AND D.D_TYPE = 'memberJoinQuestion'
							  </if>
							  <if test="searchCondition =='billAndOrderQuestion'">
							  	AND D.D_TYPE = 'billAndOrderQuestion'
							  </if>
							  <if test="searchCondition =='reviewManagementQuestion'">
							  	AND D.D_TYPE = 'reviewManagementQuestion'
							  </if>
							  <if test="searchCondition =='userQuestion'">
							  	AND D.D_TYPE = 'userQuestion'
							  </if>
							  <if test="searchCondition =='inconvenienceQuestion'">
							  	AND D.D_TYPE = 'inconvenienceQuestion'
							  </if>
							  <if test="searchCondition =='etcQuestion'">
							  	AND D.D_TYPE = 'etcQuestion'
							  </if>
							  <if test="searchValue != null and searchValue !=''">
							   AND C.POST_TITLE LIKE '%' || #{ searchValue } || '%'
							  </if>
						  </where>
						  ORDER BY C.POST_NO DESC
						  ) B
					  <![CDATA[
					  WHERE ROWNUM <= #{ endRow }
					  ]]>
					  ) A
				JOIN BOARD_TBL D ON (A.BOARD_CODE = D.BOARD_CODE)	  
		 	   WHERE A.RNUM >= #{ startRow }	
    </select> 
    
    <select id="selectStoreList" resultMap="storeResultMap">
    	SELECT
		       C.RNUM
		     , C.MEM_CODE
		     , C.STORE_NAME
		     , C.STORE_IMG
		     , C.COUNT
	     FROM (SELECT
		              ROWNUM RNUM
		            , B.MEM_CODE
	                , B.STORE_NAME
	                , B.STORE_IMG 
	                , B.COUNT 
	            FROM (SELECT
	                         A.MEM_CODE
	                       , A.STORE_NAME
	                       , A.STORE_IMG 
	                       , (SELECT COUNT(*) FROM REVIEW_TBL R JOIN ORDER_TBL O ON(R.ORDER_CODE = O.ORDER_CODE) WHERE O.STORE_CODE = A.MEM_CODE) AS COUNT
	                    FROM STORE_TBL A
	                    LEFT JOIN MEMBER_TBL M ON(A.MEM_CODE = M.MEM_CODE)
	                    <where>
	                    	M.IS_DELETED = 'N'
				         	<if test='searchValue != null'>
				         	AND A.POST_TITLE LIKE '%' ||  #{ searchValue } || '%'
				         	</if>
				         	<if test="searchCondition == 'famous'">
	                    	AND (SELECT COUNT(*) FROM REVIEW_TBL R JOIN ORDER_TBL O ON(R.ORDER_CODE = O.ORDER_CODE) WHERE O.STORE_CODE = A.MEM_CODE) > 10 
		                    </if>
			   	        </where>
	                    <if test="searchCondition == 'new'">
	                    	ORDER BY M.ENROLL_DATE DESC
	                    </if>
	                    <if test="searchCondition == 'famous'">
	                    	ORDER BY (SELECT COUNT(*) FROM REVIEW_TBL R JOIN ORDER_TBL O ON(R.ORDER_CODE = O.ORDER_CODE) WHERE O.STORE_CODE = A.MEM_CODE) DESC
	                    </if>
	                    )B
	          <![CDATA[        
	          WHERE ROWNUM <= #{ endRow }
	          ]]>)C
	   <![CDATA[
	  WHERE C.RNUM >= #{ startRow } 
       ]]>
    </select>
    
    <select id="selectProductTotalCount" parameterType="hashmap" resultType="_int">
    	SELECT
			   COUNT(*)
		  FROM PRODUCT_TBL A
		 WHERE A.IS_DELETED = 'N'
		   AND A.ORDERABLE_STATUS = 'Y'
		 <if test="category != 'recommend' and category != null">
		   AND A.CATEGORY_CODE = #{ category } 
		 </if>
		 <if test="category == 'recommend' and category != null">
		   AND A.RECOMMEND_YN = 'Y'
		 </if>
		 <if test="searchValue != null">
		   AND A.SD_NAME LIKE '%' || #{ searchValue } || '%'
		 </if>
		 <if test="searchCondition != null">
		   AND A.DISCOUNT_RATE > 0
		 </if>
    </select>
    
    <select id="selectProductList" resultMap="productResultMap">
    	SELECT
		       C.RNUM
		     , C.SD_CODE
             , C.SD_NAME
             , C.PRICE
             , C.VOLUME 
             , C.SD_IMG 
             , C.CATEGORY 
             , C.DISCOUNT_RATE 
             , C.MEM_CODE
             , C.STORE_NAME
	     FROM (SELECT
		              ROWNUM RNUM
		            , B.SD_CODE
	                , B.SD_NAME
	                , B.PRICE
	                , B.VOLUME 
                    , B.SD_IMG 
                    , B.CATEGORY 
                    , B.DISCOUNT_RATE 
                    , B.MEM_CODE 
                    , B.STORE_NAME 
	            FROM (SELECT
	                         A.SD_CODE
	                       , A.SD_NAME
	                       , A.PRICE 
	                       , A.VOLUME 
	                       , A.SD_IMG 
	                       , A.CATEGORY 
	                       , A.DISCOUNT_RATE 
	                       , A.MEM_CODE 
	                       , S.STORE_NAME
	                    FROM PRODUCT_TBL A
	                    LEFT JOIN MEMBER_TBL M ON(A.MEM_CODE = M.MEM_CODE)
	                    LEFT JOIN STORE_TBL S ON(A.MEM_CODE = S.MEM_CODE)
	                    <where>
	                    	M.IS_DELETED = 'N'
	                    	AND A.ORDERABLE_STATUS = 'Y'
	                    	AND A.IS_DELETED = 'N'
				         	<if test='searchValue != null'>
				         	AND A.SD_NAME LIKE '%' ||  #{ searchValue } || '%'
				         	</if>
		                    <if test="searchCondition == 'recommend'">
		                    AND A.RECOMMEND_YN = 'Y'
		                    </if>
		                    <if test="searchCondition != 'recommend' and searchCondition != 'sale'">
		                    AND A.CATEGORY_CODE = #{ searchCondition }
		                    </if>
		                    <if test="searchCondition == 'sale'">
							AND A.DISCOUNT_RATE > 0
							</if>
			   	        </where>
	                    )B
	          <![CDATA[        
	          WHERE ROWNUM <= #{ endRow }
	          ]]>)C
	   <![CDATA[
	  WHERE C.RNUM >= #{ startRow } 
       ]]>
    </select>
    
    <select id="selectStoreMyMemCode" resultType="hashmap">
    	SELECT
    		   A.MEM_CODE
    		 , A.PHONE 
    		 , B.STORE_IMG
    		 , B.STORE_NAME
    		 , B.GRADE
    		 , (SELECT COUNT(*) FROM JJIM_TBL C WHERE C.CEO_CODE = #{ memCode }) AS JJIM
    	  FROM MEMBER_TBL A
    	  LEFT JOIN STORE_TBL B ON(A.MEM_CODE = B.MEM_CODE)
    	 WHERE A.MEM_CODE = #{ memCode }
    </select>
    
    <select id="selectReviewList" resultMap="reviewResultMap">
    	SELECT
		       C.RNUM
		     , C.MEM_CODE
             , C.RV_IMG
             , C.RV_CONTENT
             , C.RV_GRADE 
             , C.RV_CODE 
             , C.MEM_ID 
             , C.SD_NAME 
	     FROM (SELECT
		              ROWNUM RNUM
		            , B.MEM_CODE
	                , B.RV_IMG
	                , B.RV_CONTENT
	                , B.RV_GRADE 
                    , B.RV_CODE 
                    , B.MEM_ID 
                    , B.SD_NAME 
	            FROM (SELECT
	                         A.MEM_CODE
	                       , A.RV_IMG
	                       , A.RV_CONTENT
	                       , A.RV_GRADE
	                       , A.RV_CODE
	                       , A.MEM_ID 
	                       , P.SD_NAME
	                    FROM REVIEW_TBL A
	                    LEFT JOIN ORDER_INFO_TBL O ON(A.ORDER_CODE = O.ORDER_CODE)
						JOIN PRODUCT_TBL P ON(O.SD_CODE = P.SD_CODE)
	                    <where>
	                    	A.IS_DELETED = 'N'
	                    	<if test="searchCondition != null ">
		                    AND P.MEM_CODE = #{ searchCondition }
		                    </if>
			   	        </where>
	                    )B
	          <![CDATA[
	          WHERE ROWNUM <= #{ endRow }
	          ]]>)C
	   <![CDATA[
	  WHERE C.RNUM >= #{ startRow } 
       ]]>
    </select>
    
    <select id="selectReviewTotalCount" parameterType="hashmap" resultType="_int">
    	SELECT
			   COUNT(*)
		  FROM REVIEW_TBL A
		  JOIN ORDER_INFO_TBL B ON(A.ORDER_CODE = B.ORDER_CODE)
		  JOIN PRODUCT_TBL C ON(B.SD_CODE = C.SD_CODE)
		 WHERE A.IS_DELETED = 'N'
		 <if test="memCode != null">
		   AND C.MEM_CODE = #{ memCode }
		 </if>
    </select>
    
    <select id="selectProducts" resultMap="productResultMap">
    	SELECT
    		   A.SD_CODE
    		 , A.SD_IMG
    		 , A.SD_NAME
    		 , A.SD_DETAIL
    		 , A.DISCOUNT_RATE
    		 , A.PRICE
    		 , A.ORDERABLE_STATUS
    	  FROM PRODUCT_TBL A
    	 WHERE A.IS_DELETED = 'N'
    	   AND A.EXPIRY_DATE <![CDATA[ >=  ]]> SYSDATE
    	   AND A.MEM_CODE = #{ memCode }
    </select>
    
    <select id="selectProductBySdCode" resultMap="productTagResultMap">
    	SELECT
    		   A.SD_CODE
    		 , A.SD_IMG
    		 , A.M_DATE
    		 , A.EXPIRY_DATE
    		 , A.VOLUME
    		 , A.DISCOUNT_RATE
    		 , A.CATEGORY
    		 , A.STORAGE_METHOD
    		 , A.INGREDIENT
    		 , A.SD_NAME
    		 , A.SD_DETAIL
    		 , A.DISCOUNT_RATE
    		 , A.PRICE
    		 , A.ORDERABLE_STATUS
    		 , C.TAG
    	  FROM PRODUCT_TBL A
    	  LEFT JOIN PRODUCT_TAG_TBL B ON(A.SD_CODE = B.SD_CODE)
    	  JOIN TAGS_TBL C ON(B.TAG_NO = C.TAG_NO)
    	 WHERE A.IS_DELETED = 'N'
    	   AND A.SD_CODE = #{ sdCode }
    </select>
    
 <!--  장바구니 상품 조회   -->
    <select id="selectCountCart" resultType="_int"> 
    	SELECT COUNT(*)
    	  FROM CART_TBL
    	 WHERE SD_CODE = #{ sdCode }
		   AND MEM_CODE = #{ memCode }	
    </select>  
    
    <!-- 장바구니 상품 insert --> 
     <insert id="insertCart"  parameterType="hashMap">
    	INSERT
    	INTO CART_TBL
    	VALUES
    	(
    	  #{ memCode }
    	, #{ sdCode }
    	, #{ amount }
    	, SEQ_CART.NEXTVAL
    	, #{ totalPrice }
    	)
    </insert>  
    
   <!-- 장바구니에 상품 update -->
    <update id="updateCart" parameterType="hashMap">
    	UPDATE CART_TBL
    	   SET AMOUNT = AMOUNT + #{ amount },
    	       TOTAL_PRICE = TOTAL_PRICE + #{ totalPrice } 
    	 WHERE MEM_CODE = #{ memCode }
    	   AND SD_CODE = #{ sdCode }
    </update> 
    
    <!-- 장바구니 목록 조회 -->
    <select id="cartList" resultMap="cartResultMap">
   	SELECT
                A.SD_CODE
              , A.SD_NAME
              , A.PRICE 
              , A.SD_IMG 
              , A.DISCOUNT_RATE 
              , S.STORE_NAME
              , S.STORE_IMG
              , C.AMOUNT
              , C.CART_CODE
              , C.TOTAL_PRICE
              , S.MEM_CODE
           FROM CART_TBL C
           LEFT JOIN MEMBER_TBL M ON(C.MEM_CODE = M.MEM_CODE)
           LEFT JOIN PRODUCT_TBL A ON(A.SD_CODE = C.SD_CODE)
           LEFT JOIN STORE_TBL S ON(A.MEM_CODE = S.MEM_CODE)
          WHERE C.MEM_CODE = #{ memCode }
       ORDER BY C.MEM_CODE 
          
    </select> 
    
    <!-- 장바구니 카트코드 삭제 -->
    <delete id ="deleteCartList">
    	DELETE 
    	  FROM CART_TBL A
    	 WHERE A.MEM_CODE = #{ memCode }
    	   AND A.CART_CODE IN(<foreach collection="deleteCartList" separator="," item="item">#{ item }</foreach>)
    </delete>
    

	<!-- 포장 주문리스트 저장 -->
	<insert id="insertPackageOrderList">
      INSERT ALL
        INTO ORDER_TBL
      VALUES
         (
            #{ memCode }
          , #{ price }
          , SEQ_ORDER_CODE.NEXTVAL
          , '포장'
          , null
          , null
          , null
          , #{ storeName }
          , 1
          , null
          , null
          , null
          , SYSDATE
          , #{ storeCode }
          , null
          , null    
          )
        INTO ORDER_INFO_TBL
      VALUES 
         (
         	#{ sdCode }
		  , #{ amount }
		  , SEQ_ORDER_CODE.CURRVAL
		  , SEQ_PRO_NO.NEXTVAL                
         )
      SELECT * FROM DUAL    
   </insert>
   
   <select id="selectMemberAddress" resultMap="memberResultMap2" parameterType="_int">
      SELECT
             ADDRESS
           , POST_CODE
           , D_ADDRESS
        FROM MEMBER_TBL
       WHERE MEM_CODE = #{ memCode }
   </select>
   

	<!-- 배달 주문리스트 저장 -->
	<insert id="insertDeliveryOrderList">
		INSERT ALL
        INTO ORDER_TBL
      VALUES
         (
            #{ memCode }
          , #{ price }
          , SEQ_ORDER_CODE.NEXTVAL
          , '배달'
          , null
          , null
          , null
          , #{ storeName }
          , 1
          , null
          , null
          , null
          , SYSDATE
          , #{ storeCode }  
          , null
          , null   
          )
        INTO ORDER_INFO_TBL
      VALUES 
         (
         	#{ sdCode }
		  , #{ amount }
		  , SEQ_ORDER_CODE.CURRVAL
		  , SEQ_PRO_NO.NEXTVAL                
         )
      SELECT * FROM DUAL   
	</insert>

	<!-- 마지막 주문 코드 조회 -->
    <select id="selectLastOrderCode" resultType="_int">
    	SELECT SEQ_ORDER_CODE.CURRVAL FROM DUAL
    </select>
    
    <!-- 주문 리스트 조회 -->   
    <select id="selectOrderList" resultType="hashmap" parameterType="list">
    	SELECT
    	       A.MEM_CODE
    		 , A.ORDER_CODE
    		 , A.TOTAL_PRICE
    		 , B.STORE_IMG
    		 , B.STORE_NAME
    		 , B.MEM_CODE AS STORE_CODE
    		 , B.DEL_COST
    	  FROM ORDER_TBL A
    	  LEFT JOIN STORE_TBL B ON(A.STORE_CODE = B.MEM_CODE)
    	 WHERE A.ORDER_CODE IN (
    	 <foreach collection="list" item="item" separator=",">
    	 	#{ item }
    	 </foreach>
    	 )
    </select>
    
    <!-- 쿠폰 리스트 조회 -->
    <select id="selectCouponList" resultMap="couponResultMap">
    	SELECT
    		   A.CP_CODE
    		 , A.CP_NUM
    		 , B.CP_NAME
    		 , B.START_DATE
    		 , B.DISCOUNT_WON
    		 , B.END_DATE
    		 , B.DC_CONDITION
    		 , C.MEM_CODE AS STORE_CODE
    	  FROM CP_HISTORY_TBL A
    	  LEFT JOIN COUPON_TBL B ON(A.CP_CODE = B.CP_CODE)
    	  LEFT JOIN COUPON_STORE_TBL C ON(B.CP_CODE = C.CP_CODE)
    	 WHERE SYSDATE BETWEEN B.START_DATE AND B.END_DATE
    	   AND A.USE_STATUS = 'N'
    	   AND A.MEM_CODE = #{ memCode }
    </select>
    
  <!-- 결제취소 -->
    <delete id="deleteOrder" parameterType="list">
    	DELETE FROM ORDER_TBL
    	 WHERE ORDER_CODE IN (
    	 <foreach collection="list" separator="," item="item">
    	 	#{ item }
    	 </foreach>
    	 )
    </delete>
    
    <!-- 방문포장 결제 업데이트 -->
    <update id="updateOrder" parameterType="hashmap">
    	UPDATE ORDER_TBL
    	   SET TOTAL_PRICE = #{ totalPrice },
    	       ORDER_RUQEUST_TIME = TO_DATE(SYSDATE,'YYYY-MM-DD HH24:mi:ss'),
    	       PHONE = #{ phone },
    	       TAKE_TIME = #{ time }
    	 WHERE ORDER_CODE = #{ orderCode }
    </update>
    
    
 	<!-- 배달 결제 업데이트 -->
	<update id="updateOrder2" parameterType="hashmap">
        UPDATE ORDER_TBL
           SET TOTAL_PRICE = #{ totalPrice },
               ORDER_RUQEUST_TIME = TO_DATE(SYSDATE,'YYYY-MM-DD HH24:mi:ss'),
               PHONE = #{ phone },
               TAKE_TIME = #{ time },
               ADDRESS = #{ address },
               POST_CODE = #{ zipCode },
               D_ADDRESS = #{ detailAddress }
         WHERE ORDER_CODE = #{ orderCode }
    </update>
	
    
    <!-- 결제시 쿠폰 업데이트 -->
    <update id="updateCouponStatus" parameterType="list">
    	UPDATE CP_HISTORY_TBL
    	   SET USE_STATUS = 'Y'
    	 WHERE CP_NUM IN (
    	 <foreach collection="list" separator="," item="item">
    	 	#{ item }
    	 </foreach>
    	 )
    </update>
    
    
    <!-- 가게 주문 알림 -->
    <insert id="insertRTNotice">
    	<selectKey keyProperty="memCode" resultType="int" order="BEFORE">
	    	SELECT
	    		   STORE_CODE
	    	  FROM ORDER_TBL WHERE ORDER_CODE = #{ orderCode }
	    </selectKey>
    	INSERT
    	INTO RT_NOTICE_TBL
    	(
    	  NOTICE_CODE
    	, MEM_CODE
    	, NOTICE_CONTENTS
    	, NOTICE_TIME
    	)
    	VALUES
    	(
    	  RT_NOTICE.NEXTVAL
    	, #{ memCode }
    	, '새 주문이 들어왔어요!'
    	, SYSDATE
    	)
    </insert>


	<!-- 포장 결제 완료 화면 조회 -->
	<select id="selectPackageOrderComplete" resultType="hashmap" parameterType="list">
		SELECT 
				   O.MEM_CODE 
				 , O.TOTAL_PRICE 
			     , O.ORDER_CODE 
				 , O.ORDER_TYPE 
				 , O.TAKE_TIME 
				 , O.PHONE
				 , O.STORE_NAME
				 , O.CODE 
				 , O.ORDER_RUQEUST_TIME
				 , I.SD_CODE
				 , I.AMONT
	             , P.SD_NAME
	             , S.STORE_NAME
	             , S.MEM_CODE AS STORE_CODE
			  FROM ORDER_TBL O 		  
			  LEFT JOIN ORDER_INFO_TBL I ON(O.ORDER_CODE = I.ORDER_CODE)
	          LEFT JOIN PRODUCT_TBL P ON (I.SD_CODE = P.SD_CODE)
			  LEFT JOIN STORE_TBL S ON (O.STORE_CODE  =  S.MEM_CODE)
			 WHERE O.ORDER_CODE IN (
			 <foreach collection="list" separator="," item="item">
			 	#{ item.orderCode }
			 </foreach>
			 )
	</select>
	

	<!-- 배달 결제 완료 화면 조회 -->
 	<select id="selectDeliveryOrderComplete" resultType="hashmap" parameterType="list">
		SELECT 
				   O.MEM_CODE 
				 , O.TOTAL_PRICE 
			     , O.ORDER_CODE 
				 , O.ORDER_TYPE 
				 , O.TAKE_TIME
				 , O.ADDRESS
				 , O.PHONE
				 , O.STORE_NAME
				 , O.CODE 
				 , O.ORDER_RUQEUST_TIME
				 , O.POST_CODE
				 , O.D_ADDRESS
				 , I.SD_CODE
				 , I.AMONT
	             , P.SD_NAME
	             , S.STORE_NAME
	             , S.MEM_CODE AS STORE_CODE
			  FROM ORDER_TBL O 		  
			  LEFT JOIN ORDER_INFO_TBL I ON(O.ORDER_CODE = I.ORDER_CODE)
	          LEFT JOIN PRODUCT_TBL P ON (I.SD_CODE = P.SD_CODE)
			  LEFT JOIN STORE_TBL S ON (O.STORE_CODE  =  S.MEM_CODE)
			 WHERE O.ORDER_CODE IN (
			 <foreach collection="list" separator="," item="item">
			 	#{ item.orderCode }
			 </foreach>
			 )
		
	</select>

    <insert id="insertReport">
    	INSERT
    	INTO REPORT_TBL
    	VALUES
    	(
    	  #{ rvCode }
    	, #{ reportType }
    	, SEQ_PREPORT.NEXTVAL
    	, SYSDATE
    	, DEFAULT
    	)
    </insert>
    
    <select id="selectStoreInfoByMemcode" resultType="hashmap">
    	SELECT
    		   C.STORE_NAME
    		 , C.STORE_IMG
    		 , A.ADDRESS
    		 , A.D_ADDRESS
    		 , C.WORK_TIME
    		 , A.PHONE
    		 , C.STORE_INFO
    		 , B.CEO_NAME
    		 , B.STORE_NO
    	  FROM MEMBER_TBL A
    	  LEFT JOIN CEO_TBL B ON(A.MEM_CODE = B.MEM_CODE)
    	  LEFT JOIN STORE_TBL C ON(C.MEM_CODE = B.MEM_CODE)
    	 WHERE A.MEM_CODE = #{ memCode }
    </select>
    
    <select id="selectSearchList" resultMap="productResultMap">
    	SELECT
               A.SD_CODE
             , A.SD_NAME
             , A.PRICE 
             , A.VOLUME 
             , A.SD_IMG 
             , A.CATEGORY 
             , A.DISCOUNT_RATE 
             , A.MEM_CODE 
             , S.STORE_NAME
          FROM PRODUCT_TBL A
          LEFT JOIN PRODUCT_TAG_TBL P ON(A.SD_CODE = P.SD_CODE)
          LEFT JOIN TAGS_TBL T ON(P.TAG_NO = T.TAG_NO)
          LEFT JOIN STORE_TBL S ON(A.MEM_CODE = S.MEM_CODE)
         <where>
           	A.IS_DELETED = 'N'
           	AND A.ORDERABLE_STATUS = 'Y'
           	AND A.EXPIRY_DATE <![CDATA[ >=  ]]> SYSDATE
      		<if test="searchCondition == null">
   				AND T.TAG IN 
			    <foreach collection="searchValue" item="item" index="index" separator="," open="(" close=")">
			    		#{ item }
			   	</foreach>
			</if>
      		<if test="searchCondition != null">
   				AND A.SD_NAME LIKE '%' || #{ searchValue } || '%'
			</if>
         </where>
    </select>
    
    <insert id="insertJJIMplus">
    	INSERT
    	INTO JJIM_TBL
    	(
    	  MEM_CODE
    	, CEO_CODE
    	)
    	VALUES
    	(
    	  #{ memCode }
    	, #{ storeCode }
    	)
    </insert>
    
    <select id="selectJJIMList" resultType="string">
    	SELECT
    		   A.MEM_CODE
    	  FROM JJIM_TBL A
    	 WHERE A.CEO_CODE = #{ memCode }
    </select>
    
    <delete id="deleteJJIMplus">
    	DELETE FROM JJIM_TBL
    	WHERE MEM_CODE = #{ memCode }
    	  AND CEO_CODE = #{ storeCode }
    </delete>
    
     <!-- 1:1상담 입력 -->
     <insert id="registMtmConsultingText" parameterType="hashmap">
	    INSERT
	       	INTO POST_TBL A
	    (
	       A.POST_NO
		 , A.BOARD_CODE
		 , A.POST_TITLE
		 , A.MEM_CODE
		 , A.POST_CONTENT
		 , A.POST_DATE
	    )
	    VALUES
	    (
	       SEQ_POST.NEXTVAL
		 , #{ boardCode }
		 , #{ mtmTitle }
		 , #{ memCode }
		 , #{ mtmContents }
		 , SYSDATE
	    )
     </insert>
     
    
     <insert id="registMtmConFile" parameterType="hashmap">
	    <selectKey keyProperty="postNo" resultType="int" order="BEFORE">
	    	SELECT
	    		   SEQ_POST.CURRVAL
	    	  FROM DUAL	   
	    </selectKey>	
     	INSERT
     		INTO FILE_TBL A
     	(
     	  FILE_CODE
		, A.FILE_NAME
		, A.POST_NO
		, A.FILE_TYPE
     	)
     	VALUES
     	(
     	  SEQ_FILE.NEXTVAL
     	, #{ fileLocation, jdbcType=VARCHAR }
     	, #{ postNo }
     	, #{ fileType }
     	)	
     </insert>
     
     <!-- 1:1 상담 게시물 수정 -->
     <!-- 1:1 상담 게시물 텍스트 수정 -->
     <update id="updateMtmConsultingText" parameterType="hashmap">
     	UPDATE
     		   POST_TBL A
     	   SET A.POST_TITLE = #{ mtmTitle },
     	   	   A.POST_CONTENT = #{ mtmContents, jdbcType=VARCHAR }
     	 WHERE A.POST_NO = #{ postNo }
     	   AND A.MEM_CODE = #{ memCode }	   
     	   	   
     </update>
     <!-- 1:1 상담게시물 파일 업데이트 -->
     <update id="updateMtmConFile">
	     UPDATE
	     		FILE_TBL A
	        SET A.FILE_NAME = #{ fileLocation }	
	      WHERE A.POST_NO = #{ postNo }
	        AND A.FILE_CODE = #{ fileCode }
     </update>
     
     
     <!-- 1:1 상담내역 출력 -->
     <!-- 1:1 상담 게시물 전체 숫자 출력 -->
     <select id="selectMtmTotalCount" parameterType="hashmap" resultType="_int">
     	SELECT
			   COUNT(*)
		  FROM POST_TBL A
		  JOIN BOARD_TBL B ON(B.BOARD_CODE = A.BOARD_CODE)
		 WHERE (B.TYPE = 'userMtmConsulting' OR B.TYPE = 'OwnerMtmConsulting')
		   AND A.MEM_CODE = #{ searchCondition }
		   AND A.STATUS = 'N'
		   <if test="searchValue != null">
		   AND A.POST_TITLE = #{ searchValue }
		   </if>
		  
     
     </select>
     
     <!-- 상담내역 게시물 -->
     <select id="selectMtmConsulting" resultMap="postResultMap">
     	SELECT
     	  	   A.RNUM
     		 , A.POST_NO
			 , A.BOARD_CODE
			 , A.POST_TITLE
			 , A.MEM_CODE
			 , A.POST_CONTENT
			 , A.POST_DATE
			 , A.ANS_STATUS
			 , A.QUE_NO
			 , A.STATUS
			 , A.VIEW_CNT
			 , A.ANS_CONTENT
		 FROM (SELECT ROWNUM RNUM
		 			, B.POST_NO
		 			, B.BOARD_CODE
			 		, B.POST_TITLE
			 		, B.MEM_CODE
			 		, B.POST_CONTENT
			 		, B.POST_DATE
			 		, B.ANS_STATUS
			 		, B.QUE_NO
			 		, B.STATUS
			 		, B.VIEW_CNT
			 		, B.ANS_CONTENT
			 	FROM (SELECT C.POST_NO
		 				   , C.BOARD_CODE
			 			   , C.POST_TITLE
			 			   , C.MEM_CODE
			 			   , C.POST_CONTENT
			 			   , C.POST_DATE
			 			   , C.ANS_STATUS
			 			   , C.QUE_NO
			 			   , C.STATUS
			 			   , C.VIEW_CNT
			 			   , C.ANS_CONTENT
			 		 	FROM POST_TBL C
			 		    JOIN BOARD_TBL D ON(D.BOARD_CODE = C.BOARD_CODE)
			 		   WHERE (D.TYPE = 'userMtmConsulting' OR D.TYPE = 'userMtmConsulting')
			 		   	 AND C.MEM_CODE = #{ searchCondition }
			 		   	 AND C.STATUS = 'N'
			 		   <if test="searchValue != null">
			 		   	 AND C.POST_TITLE = #{ searchValue }
			 		   </if>
			 		   ORDER BY	C.POST_DATE DESC   
			 			)B
				 <![CDATA[
				 WHERE ROWNUM <= #{ endRow }
			 	 ]]>
			 	 )A
		 <![CDATA[
		 WHERE A.RNUM >= #{ startRow }
		 ]]>		 	 	 
     </select>
     
     <!-- 상담 내역 화면 출력  -->
     <!-- 사용자 및 관리자 작성 상담내역 텍스트 부분 -->
     <select id="selectConsultingCon" parameterType="hashmap" resultMap="postResultMap">
     	SELECT
		       A.POST_NO
			 , A.BOARD_CODE
			 , A.POST_TITLE
			 , A.MEM_CODE
			 , A.POST_CONTENT
			 , A.POST_DATE
			 , A.ANS_STATUS
			 , A.QUE_NO
			 , A.STATUS
			 , A.VIEW_CNT
			 , A.ANS_CONTENT
		  FROM POST_TBL A	
	     WHERE A.POST_NO = #{ postNo }
	       AND A.STATUS = 'N'
	       AND A.MEM_CODE = #{ memCode }	
     </select>
     
     <!-- 소비자 또는 사업자 첨부 이미지 파일 -->
     <select id="selectConsumerImg" parameterType="_int" resultMap="fileResultMap">
     	SELECT 
		       A.FILE_CODE
		 	 , A.FILE_NAME
			 , A.POST_NO
			 , A.FILE_TYPE
		 FROM FILE_TBL A
		WHERE (A.FILE_TYPE = 'owner' OR A.FILE_TYPE = 'user')	
		  AND A.POST_NO = #{ postNo }	 
     </select>
     <!-- 관리자 첨부 이미지 파일 -->
     <select id="selectManagerImg" parameterType="_int" resultMap="fileResultMap">
     	SELECT 
		       A.FILE_CODE
		 	 , A.FILE_NAME
			 , A.POST_NO
			 , A.FILE_TYPE
		 FROM FILE_TBL A
		WHERE A.FILE_TYPE = 'manager'
		  AND A.POST_NO = #{ postNo }
     </select>
     
     <!-- 게시물 삭제 -->
     <update id="updateDelConsulting" parameterType="_int">
     UPDATE
     		POST_TBL A
        SET A.STATUS = 'Y'
      WHERE A.POST_NO = #{ postNo }	
     </update>
    
    <!-- 소비자 게시물 소비자 이미지 파일 삭제 -->
    <update id="updateDelImg">
    	UPDATE
    		  FILE_TBL A
    	  SET FILE_NAME = #{ cameraImg }
    	WHERE FILE_CODE = #{ fileCode }  
    </update>
    

    


    </mapper>